[{"/Users/clementvanstaen/Projects/songbook/frontend/src/index.js":"1","/Users/clementvanstaen/Projects/songbook/frontend/src/App.js":"2","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Book/Book.js":"3","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/Page.js":"4","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Footer/Footer.js":"5","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/Piano/Piano.js":"6","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/InfoDrawer/InfoDrawer.js":"7","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/InfoDrawer/Tags/Tags.js":"8","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/InfoDrawer/Lyrics/Lyrics.js":"9","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/InfoDrawer/Links/Links.js":"10","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/Bass/Bass.js":"11"},{"size":247,"mtime":1607277226000,"results":"12","hashOfConfig":"13"},{"size":290,"mtime":1607286566000,"results":"14","hashOfConfig":"13"},{"size":1819,"mtime":1607430546000,"results":"15","hashOfConfig":"13"},{"size":3813,"mtime":1607449696000,"results":"16","hashOfConfig":"13"},{"size":306,"mtime":1607288946000,"results":"17","hashOfConfig":"13"},{"size":2970,"mtime":1607348099000,"results":"18","hashOfConfig":"19"},{"size":2037,"mtime":1607425073000,"results":"20","hashOfConfig":"19"},{"size":5049,"mtime":1607451028000,"results":"21","hashOfConfig":"19"},{"size":1926,"mtime":1607449110000,"results":"22","hashOfConfig":"19"},{"size":4837,"mtime":1607449072000,"results":"23","hashOfConfig":"19"},{"size":2940,"mtime":1607427658000,"results":"24","hashOfConfig":"19"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"ubu8rq",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"9yvzlv",{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"39"},"/Users/clementvanstaen/Projects/songbook/frontend/src/index.js",[],["52","53"],"/Users/clementvanstaen/Projects/songbook/frontend/src/App.js",[],"/Users/clementvanstaen/Projects/songbook/frontend/src/component/Book/Book.js",[],"/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/Page.js",[],"/Users/clementvanstaen/Projects/songbook/frontend/src/component/Footer/Footer.js",[],"/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/Piano/Piano.js",["54","55"],"import { React } from 'react';\nimport piano from './piano.png'\nimport { Tooltip, notification } from 'antd';\nimport axios from 'axios';\n\nimport './Piano.css';\n\nconst Piano = props => {\n\n    const isPiano = props.isPiano;\n    const front = props.front;\n\n    const handlerMarkAsPIano = (value) => {\n        console.log('click', value)\n    }\n\n    return (\n        <div className=\"piano\" id=\"piano\">\n            {front ?\n                (isPiano &&\n                    (<Tooltip placement=\"bottomRight\" title=\"Play this on keys!\">\n                        <img\n                            className=\"piano__img\"\n                            src={piano}\n                            alt={piano}>\n                        </img>\n                    </Tooltip>)\n                )\n                :\n                (isPiano ?\n                    (<Tooltip placement=\"right\" title=\"Not for piano?\">\n                        <img\n                            onClick={() => handlerMarkAsPIano(false)}\n                            className=\"piano__img clickable\"\n                            src={piano}\n                            alt={piano}>\n                        </img>\n                    </Tooltip>)\n                    :\n                    (<Tooltip placement=\"right\" title=\"This is for piano!\">\n                        <img\n                            onClick={() => handlerMarkAsPIano(true)}\n                            className=\"piano__img clickable grey\"\n                            src={piano}\n                            alt={piano}>\n                        </img>\n                    </Tooltip>)\n                )\n            }\n        </div >\n    )\n}\n\nexport default Piano\n\n\n/*\n\n const patchBookmark = (value) => {\n        async function patchEntry(value) {\n            const response = await axios({\n                url: process.env.REACT_APP_API_URL + '/' + props.id,\n                method: 'PATCH',\n                data: { 'bookmark': value }\n            });\n            if ((response.status !== 200) & (response.status !== 201)) {\n                throw new Error(\"Error!\");\n            }\n            const patchResult = await response.data;\n            return patchResult;\n        }\n        // fetch Entries\n        patchEntry(value).then((resData) => {\n            const patchResult = resData;\n            console.log(\"Sucess\", patchResult);\n        }\n        ).catch(error => {\n            console.log(\"error\", error.message);\n        });\n    }\n\n\n    const handlerBookmarking = (value) => {\n        props.setIsBookmarked(value);\n        patchBookmark(value);\n\n        const messageTitle = value ? 'Bookmarked!' : 'Bookmarked deleted';\n        const messageText = value ? 'will appears with a bookmark from now on.' : 'is not bookmarked anymore';\n\n        notification.success({\n            message: messageTitle,\n            description:\n                `Watchlist entry #${props.id} ${messageText}.`,\n            placement: \"bottomRight\",\n        });\n\n    }\n\n*/",["56","57"],"/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/InfoDrawer/InfoDrawer.js",["58"],"import { React } from \"react\";\nimport YouTube from 'react-youtube';\nimport { Drawer, Divider } from 'antd';\nimport Tags from './Tags/Tags'\nimport Lyrics from './Lyrics/Lyrics';\nimport Links from './Links/Links';\n\nconst cElement = null;\n\nconst InfoDrawer = (props) => {\n\n    const videoID = props.page.videourl ? props.page.videourl.split('=')[1] : '';\n    const videoOptions = {\n        height: '226',\n        width: '300',\n        playerVars: {\n            autoplay: 0,\n        },\n    };\n\n    return (\n        <Drawer\n            title={props.page.song.toUpperCase()}\n            placement=\"right\"\n            closable={true}\n            onClose={props.handlerCloseDrawer}\n            visible={props.drawerVisible}\n            className=\"Page__drawer\"\n            width=\"350\"\n        >\n            {props.page.videourl ?\n                (<YouTube videoId={videoID} opts={videoOptions} />)\n                : (<img src={props.page.picurl} className=\"Page-drawer__artwork\" alt=\"pic_missing\" ></img>)\n            }\n\n            <Divider orientation=\"left\" plain>\n                <span className=\"Page-drawer__diviser\">\n                    Tags\n                </span>\n            </Divider>\n            <Tags\n                tags={props.page.tags}\n                id={props.page.id}\n                setTagsMissing={props.setTagsMissing}\n            />\n\n            <Divider />\n            <Links\n                tabs={props.page.link}\n                video={props.page.videourl}\n                pic={props.page.picurl}\n                id={props.page.id}\n                setTabsMissing={props.setTabsMissing}\n                setVideoMissing={props.setVideoMissing}\n                setPicMissing={props.setPicMissing}\n            />\n\n            <Divider orientation=\"left\" plain>\n                <span className=\"Page-drawer__diviser\">\n                    Lyrics\n                    </span>\n            </Divider>\n            <Lyrics artist={props.page.artist} song={props.page.song} />\n        </Drawer>\n    )\n\n}\n\nexport default InfoDrawer;","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/InfoDrawer/Tags/Tags.js",[],"/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/InfoDrawer/Lyrics/Lyrics.js",[],"/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/InfoDrawer/Links/Links.js",["59","60","61","62","63","64"],"/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/Bass/Bass.js",["65","66"],"import { React } from 'react';\nimport bass from './bass.png'\nimport { Tooltip, notification } from 'antd';\nimport axios from 'axios';\n\nimport './Bass.css';\n\nconst Bass = props => {\n\n    const isBass = props.isBass;\n    const front = props.front;\n\n    const handlerMarkBass = (value) => {\n        console.log('click', value)\n    }\n\n    return (\n        <div className=\"bass\" id=\"piano\">\n            {front ?\n                (isBass &&\n                    (<Tooltip placement=\"bottomRight\" title=\"Play this on bass!\">\n                        <img\n                            className=\"bass__img\"\n                            src={bass}\n                            alt={bass}>\n                        </img>\n                    </Tooltip>)\n                )\n                :\n                (isBass ?\n                    (<Tooltip placement=\"right\" title=\"Not for bass?\">\n                        <img\n                            onClick={() => handlerMarkBass(false)}\n                            className=\"bass__img clickable\"\n                            src={bass}\n                            alt={bass}>\n                        </img>\n                    </Tooltip>)\n                    :\n                    (<Tooltip placement=\"right\" title=\"This is for bass!\">\n                        <img\n                            onClick={() => handlerMarkBass(true)}\n                            className=\"bass__img clickable grey\"\n                            src={bass}\n                            alt={bass}>\n                        </img>\n                    </Tooltip>)\n                )\n            }\n        </div >\n    )\n}\n\nexport default Bass\n\n\n/*\n\n const patchBookmark = (value) => {\n        async function patchEntry(value) {\n            const response = await axios({\n                url: process.env.REACT_APP_API_URL + '/' + props.id,\n                method: 'PATCH',\n                data: { 'bookmark': value }\n            });\n            if ((response.status !== 200) & (response.status !== 201)) {\n                throw new Error(\"Error!\");\n            }\n            const patchResult = await response.data;\n            return patchResult;\n        }\n        // fetch Entries\n        patchEntry(value).then((resData) => {\n            const patchResult = resData;\n            console.log(\"Sucess\", patchResult);\n        }\n        ).catch(error => {\n            console.log(\"error\", error.message);\n        });\n    }\n\n\n    const handlerBookmarking = (value) => {\n        props.setIsBookmarked(value);\n        patchBookmark(value);\n\n        const messageTitle = value ? 'Bookmarked!' : 'Bookmarked deleted';\n        const messageText = value ? 'will appears with a bookmark from now on.' : 'is not bookmarked anymore';\n\n        notification.success({\n            message: messageTitle,\n            description:\n                `Watchlist entry #${props.id} ${messageText}.`,\n            placement: \"bottomRight\",\n        });\n\n    }\n\n*/",{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":3,"column":19,"nodeType":"73","messageId":"74","endLine":3,"endColumn":31},{"ruleId":"71","severity":1,"message":"75","line":4,"column":8,"nodeType":"73","messageId":"74","endLine":4,"endColumn":13},{"ruleId":"67","replacedBy":"76"},{"ruleId":"69","replacedBy":"77"},{"ruleId":"71","severity":1,"message":"78","line":8,"column":7,"nodeType":"73","messageId":"74","endLine":8,"endColumn":15},{"ruleId":"71","severity":1,"message":"79","line":2,"column":15,"nodeType":"73","messageId":"74","endLine":2,"endColumn":20},{"ruleId":"71","severity":1,"message":"75","line":3,"column":8,"nodeType":"73","messageId":"74","endLine":3,"endColumn":13},{"ruleId":"71","severity":1,"message":"80","line":4,"column":10,"nodeType":"73","messageId":"74","endLine":4,"endColumn":22},{"ruleId":"71","severity":1,"message":"81","line":10,"column":18,"nodeType":"73","messageId":"74","endLine":10,"endColumn":25},{"ruleId":"71","severity":1,"message":"82","line":11,"column":19,"nodeType":"73","messageId":"74","endLine":11,"endColumn":27},{"ruleId":"71","severity":1,"message":"83","line":12,"column":17,"nodeType":"73","messageId":"74","endLine":12,"endColumn":23},{"ruleId":"71","severity":1,"message":"72","line":3,"column":19,"nodeType":"73","messageId":"74","endLine":3,"endColumn":31},{"ruleId":"71","severity":1,"message":"75","line":4,"column":8,"nodeType":"73","messageId":"74","endLine":4,"endColumn":13},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'notification' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.",["84"],["85"],"'cElement' is assigned a value but never used.","'Input' is defined but never used.","'PlusOutlined' is defined but never used.","'setTabs' is assigned a value but never used.","'setVideo' is assigned a value but never used.","'setPic' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]