[{"/Users/clementvanstaen/Projects/songbook/frontend/src/index.js":"1","/Users/clementvanstaen/Projects/songbook/frontend/src/App.js":"2","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Book/Book.js":"3","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/Page.js":"4","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Footer/Footer.js":"5","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/Piano/Piano.js":"6","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/Favorite/Favorite.js":"7","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/InfoDrawer/InfoDrawer.js":"8","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/InfoDrawer/Tags/Tags.js":"9","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/InfoDrawer/Lyrics/Lyrics.js":"10","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/InfoDrawer/Links/Links.js":"11","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/Bass/Bass.js":"12"},{"size":247,"mtime":1607277226000,"results":"13","hashOfConfig":"14"},{"size":290,"mtime":1607286566000,"results":"15","hashOfConfig":"14"},{"size":1819,"mtime":1607430546000,"results":"16","hashOfConfig":"14"},{"size":3759,"mtime":1607448999000,"results":"17","hashOfConfig":"14"},{"size":306,"mtime":1607288946000,"results":"18","hashOfConfig":"14"},{"size":2970,"mtime":1607348099000,"results":"19","hashOfConfig":"14"},{"size":2895,"mtime":1607351663000,"results":"20","hashOfConfig":"14"},{"size":2037,"mtime":1607425073000,"results":"21","hashOfConfig":"14"},{"size":5012,"mtime":1607448773000,"results":"22","hashOfConfig":"14"},{"size":1926,"mtime":1607449110000,"results":"23","hashOfConfig":"14"},{"size":4837,"mtime":1607449072000,"results":"24","hashOfConfig":"14"},{"size":2940,"mtime":1607427658000,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"9yvzlv",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},"/Users/clementvanstaen/Projects/songbook/frontend/src/index.js",[],["55","56"],"/Users/clementvanstaen/Projects/songbook/frontend/src/App.js",[],"/Users/clementvanstaen/Projects/songbook/frontend/src/component/Book/Book.js",[],"/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/Page.js",["57"],"/Users/clementvanstaen/Projects/songbook/frontend/src/component/Footer/Footer.js",[],"/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/Piano/Piano.js",["58","59"],"import { React } from 'react';\nimport piano from './piano.png'\nimport { Tooltip, notification } from 'antd';\nimport axios from 'axios';\n\nimport './Piano.css';\n\nconst Piano = props => {\n\n    const isPiano = props.isPiano;\n    const front = props.front;\n\n    const handlerMarkAsPIano = (value) => {\n        console.log('click', value)\n    }\n\n    return (\n        <div className=\"piano\" id=\"piano\">\n            {front ?\n                (isPiano &&\n                    (<Tooltip placement=\"bottomRight\" title=\"Play this on keys!\">\n                        <img\n                            className=\"piano__img\"\n                            src={piano}\n                            alt={piano}>\n                        </img>\n                    </Tooltip>)\n                )\n                :\n                (isPiano ?\n                    (<Tooltip placement=\"right\" title=\"Not for piano?\">\n                        <img\n                            onClick={() => handlerMarkAsPIano(false)}\n                            className=\"piano__img clickable\"\n                            src={piano}\n                            alt={piano}>\n                        </img>\n                    </Tooltip>)\n                    :\n                    (<Tooltip placement=\"right\" title=\"This is for piano!\">\n                        <img\n                            onClick={() => handlerMarkAsPIano(true)}\n                            className=\"piano__img clickable grey\"\n                            src={piano}\n                            alt={piano}>\n                        </img>\n                    </Tooltip>)\n                )\n            }\n        </div >\n    )\n}\n\nexport default Piano\n\n\n/*\n\n const patchBookmark = (value) => {\n        async function patchEntry(value) {\n            const response = await axios({\n                url: process.env.REACT_APP_API_URL + '/' + props.id,\n                method: 'PATCH',\n                data: { 'bookmark': value }\n            });\n            if ((response.status !== 200) & (response.status !== 201)) {\n                throw new Error(\"Error!\");\n            }\n            const patchResult = await response.data;\n            return patchResult;\n        }\n        // fetch Entries\n        patchEntry(value).then((resData) => {\n            const patchResult = resData;\n            console.log(\"Sucess\", patchResult);\n        }\n        ).catch(error => {\n            console.log(\"error\", error.message);\n        });\n    }\n\n\n    const handlerBookmarking = (value) => {\n        props.setIsBookmarked(value);\n        patchBookmark(value);\n\n        const messageTitle = value ? 'Bookmarked!' : 'Bookmarked deleted';\n        const messageText = value ? 'will appears with a bookmark from now on.' : 'is not bookmarked anymore';\n\n        notification.success({\n            message: messageTitle,\n            description:\n                `Watchlist entry #${props.id} ${messageText}.`,\n            placement: \"bottomRight\",\n        });\n\n    }\n\n*/","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/Favorite/Favorite.js",["60","61"],"import { React } from 'react';\nimport favorite from './favorite.png'\nimport { Tooltip, notification } from 'antd';\nimport axios from 'axios';\n\nimport './Favorite.css';\n\nconst Favorite = props => {\n\n    const isFavorite = props.favorite;\n    const front = props.front;\n\n    const handlerMarkAsPIano = (value) => {\n        console.log('click', value)\n    }\n\n    return (\n        <div className=\"favorite\" id=\"favorite\">\n            {front ?\n                (isFavorite &&\n                    (<img\n                        className=\"favorite__img\"\n                        src={favorite}\n                        alt={favorite}>\n                    </img>)\n                )\n                :\n                (isFavorite ?\n                    (<Tooltip placement=\"right\" title=\"Mehhhhh ...\">\n                        <img\n                            onClick={() => handlerMarkAsPIano(false)}\n                            className=\"piano__img clickable\"\n                            src={favorite}\n                            alt={favorite}>\n                        </img>\n                    </Tooltip>)\n                    :\n                    (<Tooltip placement=\"right\" title=\"I absolutely LOVE this!\">\n                        <img\n                            onClick={() => handlerMarkAsPIano(true)}\n                            className=\"favorite__img clickable grey\"\n                            src={favorite}\n                            alt={favorite}>\n                        </img>\n                    </Tooltip>)\n                )\n            }\n        </div >\n    )\n}\n\nexport default Favorite\n\n\n/*\n\n const patchBookmark = (value) => {\n        async function patchEntry(value) {\n            const response = await axios({\n                url: process.env.REACT_APP_API_URL + '/' + props.id,\n                method: 'PATCH',\n                data: { 'bookmark': value }\n            });\n            if ((response.status !== 200) & (response.status !== 201)) {\n                throw new Error(\"Error!\");\n            }\n            const patchResult = await response.data;\n            return patchResult;\n        }\n        // fetch Entries\n        patchEntry(value).then((resData) => {\n            const patchResult = resData;\n            console.log(\"Sucess\", patchResult);\n        }\n        ).catch(error => {\n            console.log(\"error\", error.message);\n        });\n    }\n\n\n    const handlerBookmarking = (value) => {\n        props.setIsBookmarked(value);\n        patchBookmark(value);\n\n        const messageTitle = value ? 'Bookmarked!' : 'Bookmarked deleted';\n        const messageText = value ? 'will appears with a bookmark from now on.' : 'is not bookmarked anymore';\n\n        notification.success({\n            message: messageTitle,\n            description:\n                `Watchlist entry #${props.id} ${messageText}.`,\n            placement: \"bottomRight\",\n        });\n\n    }\n\n*/","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/InfoDrawer/InfoDrawer.js",["62"],"import { React } from \"react\";\nimport YouTube from 'react-youtube';\nimport { Drawer, Divider } from 'antd';\nimport Tags from './Tags/Tags'\nimport Lyrics from './Lyrics/Lyrics';\nimport Links from './Links/Links';\n\nconst cElement = null;\n\nconst InfoDrawer = (props) => {\n\n    const videoID = props.page.videourl ? props.page.videourl.split('=')[1] : '';\n    const videoOptions = {\n        height: '226',\n        width: '300',\n        playerVars: {\n            autoplay: 0,\n        },\n    };\n\n    return (\n        <Drawer\n            title={props.page.song.toUpperCase()}\n            placement=\"right\"\n            closable={true}\n            onClose={props.handlerCloseDrawer}\n            visible={props.drawerVisible}\n            className=\"Page__drawer\"\n            width=\"350\"\n        >\n            {props.page.videourl ?\n                (<YouTube videoId={videoID} opts={videoOptions} />)\n                : (<img src={props.page.picurl} className=\"Page-drawer__artwork\" alt=\"pic_missing\" ></img>)\n            }\n\n            <Divider orientation=\"left\" plain>\n                <span className=\"Page-drawer__diviser\">\n                    Tags\n                </span>\n            </Divider>\n            <Tags\n                tags={props.page.tags}\n                id={props.page.id}\n                setTagsMissing={props.setTagsMissing}\n            />\n\n            <Divider />\n            <Links\n                tabs={props.page.link}\n                video={props.page.videourl}\n                pic={props.page.picurl}\n                id={props.page.id}\n                setTabsMissing={props.setTabsMissing}\n                setVideoMissing={props.setVideoMissing}\n                setPicMissing={props.setPicMissing}\n            />\n\n            <Divider orientation=\"left\" plain>\n                <span className=\"Page-drawer__diviser\">\n                    Lyrics\n                    </span>\n            </Divider>\n            <Lyrics artist={props.page.artist} song={props.page.song} />\n        </Drawer>\n    )\n\n}\n\nexport default InfoDrawer;","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/InfoDrawer/Tags/Tags.js",[],"/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/InfoDrawer/Lyrics/Lyrics.js",[],"/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/InfoDrawer/Links/Links.js",["63","64","65","66","67","68"],"/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/Bass/Bass.js",["69","70"],"import { React } from 'react';\nimport bass from './bass.png'\nimport { Tooltip, notification } from 'antd';\nimport axios from 'axios';\n\nimport './Bass.css';\n\nconst Bass = props => {\n\n    const isBass = props.isBass;\n    const front = props.front;\n\n    const handlerMarkBass = (value) => {\n        console.log('click', value)\n    }\n\n    return (\n        <div className=\"bass\" id=\"piano\">\n            {front ?\n                (isBass &&\n                    (<Tooltip placement=\"bottomRight\" title=\"Play this on bass!\">\n                        <img\n                            className=\"bass__img\"\n                            src={bass}\n                            alt={bass}>\n                        </img>\n                    </Tooltip>)\n                )\n                :\n                (isBass ?\n                    (<Tooltip placement=\"right\" title=\"Not for bass?\">\n                        <img\n                            onClick={() => handlerMarkBass(false)}\n                            className=\"bass__img clickable\"\n                            src={bass}\n                            alt={bass}>\n                        </img>\n                    </Tooltip>)\n                    :\n                    (<Tooltip placement=\"right\" title=\"This is for bass!\">\n                        <img\n                            onClick={() => handlerMarkBass(true)}\n                            className=\"bass__img clickable grey\"\n                            src={bass}\n                            alt={bass}>\n                        </img>\n                    </Tooltip>)\n                )\n            }\n        </div >\n    )\n}\n\nexport default Bass\n\n\n/*\n\n const patchBookmark = (value) => {\n        async function patchEntry(value) {\n            const response = await axios({\n                url: process.env.REACT_APP_API_URL + '/' + props.id,\n                method: 'PATCH',\n                data: { 'bookmark': value }\n            });\n            if ((response.status !== 200) & (response.status !== 201)) {\n                throw new Error(\"Error!\");\n            }\n            const patchResult = await response.data;\n            return patchResult;\n        }\n        // fetch Entries\n        patchEntry(value).then((resData) => {\n            const patchResult = resData;\n            console.log(\"Sucess\", patchResult);\n        }\n        ).catch(error => {\n            console.log(\"error\", error.message);\n        });\n    }\n\n\n    const handlerBookmarking = (value) => {\n        props.setIsBookmarked(value);\n        patchBookmark(value);\n\n        const messageTitle = value ? 'Bookmarked!' : 'Bookmarked deleted';\n        const messageText = value ? 'will appears with a bookmark from now on.' : 'is not bookmarked anymore';\n\n        notification.success({\n            message: messageTitle,\n            description:\n                `Watchlist entry #${props.id} ${messageText}.`,\n            placement: \"bottomRight\",\n        });\n\n    }\n\n*/",{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":20,"column":5,"nodeType":"77","endLine":20,"endColumn":14,"suggestions":"78"},{"ruleId":"79","severity":1,"message":"80","line":3,"column":19,"nodeType":"77","messageId":"81","endLine":3,"endColumn":31},{"ruleId":"79","severity":1,"message":"82","line":4,"column":8,"nodeType":"77","messageId":"81","endLine":4,"endColumn":13},{"ruleId":"79","severity":1,"message":"80","line":3,"column":19,"nodeType":"77","messageId":"81","endLine":3,"endColumn":31},{"ruleId":"79","severity":1,"message":"82","line":4,"column":8,"nodeType":"77","messageId":"81","endLine":4,"endColumn":13},{"ruleId":"79","severity":1,"message":"83","line":8,"column":7,"nodeType":"77","messageId":"81","endLine":8,"endColumn":15},{"ruleId":"79","severity":1,"message":"84","line":2,"column":15,"nodeType":"77","messageId":"81","endLine":2,"endColumn":20},{"ruleId":"79","severity":1,"message":"82","line":3,"column":8,"nodeType":"77","messageId":"81","endLine":3,"endColumn":13},{"ruleId":"79","severity":1,"message":"85","line":4,"column":10,"nodeType":"77","messageId":"81","endLine":4,"endColumn":22},{"ruleId":"79","severity":1,"message":"86","line":10,"column":18,"nodeType":"77","messageId":"81","endLine":10,"endColumn":25},{"ruleId":"79","severity":1,"message":"87","line":11,"column":19,"nodeType":"77","messageId":"81","endLine":11,"endColumn":27},{"ruleId":"79","severity":1,"message":"88","line":12,"column":17,"nodeType":"77","messageId":"81","endLine":12,"endColumn":23},{"ruleId":"79","severity":1,"message":"80","line":3,"column":19,"nodeType":"77","messageId":"81","endLine":3,"endColumn":31},{"ruleId":"79","severity":1,"message":"82","line":4,"column":8,"nodeType":"77","messageId":"81","endLine":4,"endColumn":13},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setMissing'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [tabsMissing, tagsMissing, videoMissing, picMissing] as a second argument to the useEffect Hook.","Identifier",["91"],"no-unused-vars","'notification' is defined but never used.","unusedVar","'axios' is defined but never used.","'cElement' is assigned a value but never used.","'Input' is defined but never used.","'PlusOutlined' is defined but never used.","'setTabs' is assigned a value but never used.","'setVideo' is assigned a value but never used.","'setPic' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},"Add dependencies array: [tabsMissing, tagsMissing, videoMissing, picMissing]",{"range":"94","text":"95"},[1071,1071],", [tabsMissing, tagsMissing, videoMissing, picMissing]"]