[{"/Users/clementvanstaen/Projects/songbook/frontend/src/index.js":"1","/Users/clementvanstaen/Projects/songbook/frontend/src/App.js":"2","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Book/Book.js":"3","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/Page.js":"4","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/Lyrics/Lyrics.js":"5","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Footer/Footer.js":"6","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/Piano/Piano.js":"7","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/Favorite/Favorite.js":"8"},{"size":247,"mtime":1607277226000,"results":"9","hashOfConfig":"10"},{"size":290,"mtime":1607286566000,"results":"11","hashOfConfig":"10"},{"size":1818,"mtime":1607282774000,"results":"12","hashOfConfig":"10"},{"size":3256,"mtime":1607370108000,"results":"13","hashOfConfig":"10"},{"size":1925,"mtime":1607363706000,"results":"14","hashOfConfig":"10"},{"size":306,"mtime":1607288946000,"results":"15","hashOfConfig":"10"},{"size":2970,"mtime":1607348099000,"results":"16","hashOfConfig":"10"},{"size":2895,"mtime":1607351663000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9yvzlv",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"29"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"29"},"/Users/clementvanstaen/Projects/songbook/frontend/src/index.js",[],"/Users/clementvanstaen/Projects/songbook/frontend/src/App.js",[],"/Users/clementvanstaen/Projects/songbook/frontend/src/component/Book/Book.js",[],"/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/Page.js",["38","39"],"/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/Lyrics/Lyrics.js",["40"],"import { React, useState } from \"react\";\nimport axios from 'axios';\nimport levenshtein from 'js-levenshtein';\n\nconst Lyrics = (props) => {\n    const [lyrics, setLyrics] = useState('Loading ...');\n    const lyricsApiUrl = process.env.REACT_APP_LYRICS_API_URL + props.artist.replace(/ /g, \"%20\") + '/' + props.song.replace(/ /g, \"%20\") + '?apikey=' + process.env.REACT_APP_LYRICS_API_KEY;\n\n    const loadLyrics = () => {\n        async function fetchLyrics() {\n            const response = await axios({\n                url: lyricsApiUrl,\n                method: \"GET\",\n            });\n            if ((response.status !== 200) & (response.status !== 201)) {\n                throw new Error(\"Error!\");\n            }\n            const result = await response.data;\n            const resultLyrics = result.result;\n            return resultLyrics;\n        }\n        // fetch Entries\n        fetchLyrics().then((resData) => {\n            const cleanedOriginalArtist = props.artist.toLowerCase().replace(/ /g, \"\");\n            const cleanFoundArtist = resData.artist.name.toLowerCase().replace(/ /g, \"\");\n            const sameArtist = levenshtein(cleanedOriginalArtist, cleanFoundArtist) < 5 ? true : false;\n            if (sameArtist && resData.similarity > 0.9) {\n                setLyrics(resData.track.text);\n            } else {\n                console.log('levenshtein:', cleanedOriginalArtist, cleanFoundArtist, levenshtein(cleanedOriginalArtist, cleanFoundArtist))\n                console.log('similarity:', resData.similarity);\n                setLyrics('No lyrics found.');\n            }\n        }\n        ).catch(error => {\n            setLyrics('No lyrics found.');\n            console.log(error.message);\n        });\n    };\n\n    if (lyrics == 'Loading ...') {\n        loadLyrics();\n    }\n\n    return (\n        <div style={{ whiteSpace: \"pre-line\" }}>\n            {lyrics}\n        </div>\n    );\n}\n\nexport default Lyrics;",["41","42"],"/Users/clementvanstaen/Projects/songbook/frontend/src/component/Footer/Footer.js",[],"/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/Piano/Piano.js",["43","44"],"import { React } from 'react';\nimport piano from './piano.png'\nimport { Tooltip, notification } from 'antd';\nimport axios from 'axios';\n\nimport './Piano.css';\n\nconst Piano = props => {\n\n    const isPiano = props.isPiano;\n    const front = props.front;\n\n    const handlerMarkAsPIano = (value) => {\n        console.log('click', value)\n    }\n\n    return (\n        <div className=\"piano\" id=\"piano\">\n            {front ?\n                (isPiano &&\n                    (<Tooltip placement=\"bottomRight\" title=\"Play this on keys!\">\n                        <img\n                            className=\"piano__img\"\n                            src={piano}\n                            alt={piano}>\n                        </img>\n                    </Tooltip>)\n                )\n                :\n                (isPiano ?\n                    (<Tooltip placement=\"right\" title=\"Not for piano?\">\n                        <img\n                            onClick={() => handlerMarkAsPIano(false)}\n                            className=\"piano__img clickable\"\n                            src={piano}\n                            alt={piano}>\n                        </img>\n                    </Tooltip>)\n                    :\n                    (<Tooltip placement=\"right\" title=\"This is for piano!\">\n                        <img\n                            onClick={() => handlerMarkAsPIano(true)}\n                            className=\"piano__img clickable grey\"\n                            src={piano}\n                            alt={piano}>\n                        </img>\n                    </Tooltip>)\n                )\n            }\n        </div >\n    )\n}\n\nexport default Piano\n\n\n/*\n\n const patchBookmark = (value) => {\n        async function patchEntry(value) {\n            const response = await axios({\n                url: process.env.REACT_APP_API_URL + '/' + props.id,\n                method: 'PATCH',\n                data: { 'bookmark': value }\n            });\n            if ((response.status !== 200) & (response.status !== 201)) {\n                throw new Error(\"Error!\");\n            }\n            const patchResult = await response.data;\n            return patchResult;\n        }\n        // fetch Entries\n        patchEntry(value).then((resData) => {\n            const patchResult = resData;\n            console.log(\"Sucess\", patchResult);\n        }\n        ).catch(error => {\n            console.log(\"error\", error.message);\n        });\n    }\n\n\n    const handlerBookmarking = (value) => {\n        props.setIsBookmarked(value);\n        patchBookmark(value);\n\n        const messageTitle = value ? 'Bookmarked!' : 'Bookmarked deleted';\n        const messageText = value ? 'will appears with a bookmark from now on.' : 'is not bookmarked anymore';\n\n        notification.success({\n            message: messageTitle,\n            description:\n                `Watchlist entry #${props.id} ${messageText}.`,\n            placement: \"bottomRight\",\n        });\n\n    }\n\n*/","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/Favorite/Favorite.js",["45","46"],"import { React } from 'react';\nimport favorite from './favorite.png'\nimport { Tooltip, notification } from 'antd';\nimport axios from 'axios';\n\nimport './Favorite.css';\n\nconst Favorite = props => {\n\n    const isFavorite = props.favorite;\n    const front = props.front;\n\n    const handlerMarkAsPIano = (value) => {\n        console.log('click', value)\n    }\n\n    return (\n        <div className=\"favorite\" id=\"favorite\">\n            {front ?\n                (isFavorite &&\n                    (<img\n                        className=\"favorite__img\"\n                        src={favorite}\n                        alt={favorite}>\n                    </img>)\n                )\n                :\n                (isFavorite ?\n                    (<Tooltip placement=\"right\" title=\"Mehhhhh ...\">\n                        <img\n                            onClick={() => handlerMarkAsPIano(false)}\n                            className=\"piano__img clickable\"\n                            src={favorite}\n                            alt={favorite}>\n                        </img>\n                    </Tooltip>)\n                    :\n                    (<Tooltip placement=\"right\" title=\"I absolutely LOVE this!\">\n                        <img\n                            onClick={() => handlerMarkAsPIano(true)}\n                            className=\"favorite__img clickable grey\"\n                            src={favorite}\n                            alt={favorite}>\n                        </img>\n                    </Tooltip>)\n                )\n            }\n        </div >\n    )\n}\n\nexport default Favorite\n\n\n/*\n\n const patchBookmark = (value) => {\n        async function patchEntry(value) {\n            const response = await axios({\n                url: process.env.REACT_APP_API_URL + '/' + props.id,\n                method: 'PATCH',\n                data: { 'bookmark': value }\n            });\n            if ((response.status !== 200) & (response.status !== 201)) {\n                throw new Error(\"Error!\");\n            }\n            const patchResult = await response.data;\n            return patchResult;\n        }\n        // fetch Entries\n        patchEntry(value).then((resData) => {\n            const patchResult = resData;\n            console.log(\"Sucess\", patchResult);\n        }\n        ).catch(error => {\n            console.log(\"error\", error.message);\n        });\n    }\n\n\n    const handlerBookmarking = (value) => {\n        props.setIsBookmarked(value);\n        patchBookmark(value);\n\n        const messageTitle = value ? 'Bookmarked!' : 'Bookmarked deleted';\n        const messageText = value ? 'will appears with a bookmark from now on.' : 'is not bookmarked anymore';\n\n        notification.success({\n            message: messageTitle,\n            description:\n                `Watchlist entry #${props.id} ${messageText}.`,\n            placement: \"bottomRight\",\n        });\n\n    }\n\n*/",{"ruleId":"47","severity":1,"message":"48","line":3,"column":30,"nodeType":"49","messageId":"50","endLine":3,"endColumn":42},{"ruleId":"47","severity":1,"message":"51","line":25,"column":11,"nodeType":"49","messageId":"50","endLine":25,"endColumn":17},{"ruleId":"52","severity":1,"message":"53","line":41,"column":16,"nodeType":"54","messageId":"55","endLine":41,"endColumn":18},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"47","severity":1,"message":"60","line":3,"column":19,"nodeType":"49","messageId":"50","endLine":3,"endColumn":31},{"ruleId":"47","severity":1,"message":"61","line":4,"column":8,"nodeType":"49","messageId":"50","endLine":4,"endColumn":13},{"ruleId":"47","severity":1,"message":"60","line":3,"column":19,"nodeType":"49","messageId":"50","endLine":3,"endColumn":31},{"ruleId":"47","severity":1,"message":"61","line":4,"column":8,"nodeType":"49","messageId":"50","endLine":4,"endColumn":13},"no-unused-vars","'LinkOutlined' is defined but never used.","Identifier","unusedVar","'artist' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["62"],"no-negated-in-lhs",["63"],"'notification' is defined but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]