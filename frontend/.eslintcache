[{"/Users/clementvanstaen/Projects/songbook/frontend/src/index.js":"1","/Users/clementvanstaen/Projects/songbook/frontend/src/App.js":"2","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Book/Book.js":"3","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/Page.js":"4","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Footer/Footer.js":"5","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/Piano/Piano.js":"6","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/Favorite/Favorite.js":"7","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/InfoDrawer/InfoDrawer.js":"8","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/InfoDrawer/Tags/Tags.js":"9","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/InfoDrawer/Lyrics/Lyrics.js":"10","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/InfoDrawer/Links/Links.js":"11","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/Bass/Bass.js":"12"},{"size":247,"mtime":1607277226000,"results":"13","hashOfConfig":"14"},{"size":290,"mtime":1607286566000,"results":"15","hashOfConfig":"14"},{"size":1819,"mtime":1607420326000,"results":"16","hashOfConfig":"14"},{"size":3402,"mtime":1607426027000,"results":"17","hashOfConfig":"14"},{"size":306,"mtime":1607288946000,"results":"18","hashOfConfig":"14"},{"size":2970,"mtime":1607348099000,"results":"19","hashOfConfig":"14"},{"size":2895,"mtime":1607351663000,"results":"20","hashOfConfig":"14"},{"size":2037,"mtime":1607425073000,"results":"21","hashOfConfig":"14"},{"size":5000,"mtime":1607422281000,"results":"22","hashOfConfig":"14"},{"size":1926,"mtime":1607374294000,"results":"23","hashOfConfig":"14"},{"size":4866,"mtime":1607424993000,"results":"24","hashOfConfig":"14"},{"size":2940,"mtime":1607427658000,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"9yvzlv",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},"/Users/clementvanstaen/Projects/songbook/frontend/src/index.js",[],["57","58"],"/Users/clementvanstaen/Projects/songbook/frontend/src/App.js",[],"/Users/clementvanstaen/Projects/songbook/frontend/src/component/Book/Book.js",[],"/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/Page.js",["59"],"import { React, useState } from \"react\";\nimport { Tooltip } from 'antd';\nimport { MenuUnfoldOutlined } from '@ant-design/icons';\nimport InfoDrawer from './InfoDrawer/InfoDrawer';\nimport Piano from './Piano/Piano';\nimport Bass from './Bass/Bass';\nimport Favorite from './Favorite/Favorite';\n\nimport '../.././fonts/Dymo.ttf';\nimport './Page.css'\n\nconst Page = (props) => {\n    const [drawerVisible, setDrawerVisible] = useState(false);\n    const [tabsMissing, setTabsMissing] = useState(props.page.link === \"null\" ? true : false);\n    const [tagsMissing, setTagsMissing] = useState(props.page.tags === null ? true : false);\n    const [videoMissing, setVideoMissing] = useState(props.page.videourl === \"null\" ? true : false);\n    const [picMissing, setPicMissing] = useState(props.page.picurl === \"null\" ? true : false);\n    const [missing, setMissing] = useState((tabsMissing || tagsMissing || videoMissing || picMissing) ? true : false);\n\n    const handlerOpenDrawer = () => {\n        setDrawerVisible(true);\n    };\n    const handlerCloseDrawer = () => {\n        setDrawerVisible(false);\n    };\n\n    const title = props.page.title.replace('-', '/').replace(/ /g, '');\n    const howLongIsLong = 23;\n    const isLongTitle = title.length > howLongIsLong;\n    const titlePage = isLongTitle ? `${title.slice(0, howLongIsLong)}...` : title;\n\n    let missingText = [];\n    if (missing) {\n        if (tabsMissing === true) {\n            missingText.push(\"TABS MISSING\");\n        }\n        if (tagsMissing === true) {\n            missingText.push(\"HASHTAGS MISSING\");\n        }\n        if (videoMissing === true) {\n            missingText.push(\"VIDEO MISSING\");\n        }\n        if (picMissing === true) {\n            missingText.push(\"PICTURE MISSING\");\n        }\n    }\n\n    const missingTextFormated = missingText.map(text => {\n        return (<>{text} <br /></>)\n    });\n\n    return (\n        <div className=\"Page__main\">\n\n            { missing &&\n                (<div className=\"Page___notab_main\">\n                    <div className=\"Page__notab Page__notab-text\">\n                        {missingTextFormated}\n                    </div>\n                    <div className=\"Page__notab Page__notab-background\">\n                    </div>\n                </div>)}\n\n            <a href={props.page.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                <img src={props.page.picurl} alt=\"pic_missing\" className=\"Page__artwork\"></img>\n            </a>\n            <div className=\"Page__title\">{titlePage}</div>\n\n            <div className=\"Page__icons\">\n                <Piano front={true} isPiano={props.page.piano} />\n                <Bass front={true} isBass={props.page.bass} />\n                <Favorite front={true} favorite={props.page.favorite} />\n            </div>\n\n            <Tooltip title=\"Show more\">\n                <div className=\"Page__actionicon\">\n                    <MenuUnfoldOutlined onClick={handlerOpenDrawer} />\n                </div>\n            </Tooltip>\n\n            <InfoDrawer\n                page={props.page}\n                handlerCloseDrawer={handlerCloseDrawer}\n                drawerVisible={drawerVisible}\n                setTabsMissing={setTabsMissing}\n                setTagsMissing={setTagsMissing}\n                setVideoMissing={setVideoMissing}\n                setPicMissing={setPicMissing}\n            />\n\n\n        </div>\n    );\n}\n\nexport default Page;","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Footer/Footer.js",[],"/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/Piano/Piano.js",["60","61"],"import { React } from 'react';\nimport piano from './piano.png'\nimport { Tooltip, notification } from 'antd';\nimport axios from 'axios';\n\nimport './Piano.css';\n\nconst Piano = props => {\n\n    const isPiano = props.isPiano;\n    const front = props.front;\n\n    const handlerMarkAsPIano = (value) => {\n        console.log('click', value)\n    }\n\n    return (\n        <div className=\"piano\" id=\"piano\">\n            {front ?\n                (isPiano &&\n                    (<Tooltip placement=\"bottomRight\" title=\"Play this on keys!\">\n                        <img\n                            className=\"piano__img\"\n                            src={piano}\n                            alt={piano}>\n                        </img>\n                    </Tooltip>)\n                )\n                :\n                (isPiano ?\n                    (<Tooltip placement=\"right\" title=\"Not for piano?\">\n                        <img\n                            onClick={() => handlerMarkAsPIano(false)}\n                            className=\"piano__img clickable\"\n                            src={piano}\n                            alt={piano}>\n                        </img>\n                    </Tooltip>)\n                    :\n                    (<Tooltip placement=\"right\" title=\"This is for piano!\">\n                        <img\n                            onClick={() => handlerMarkAsPIano(true)}\n                            className=\"piano__img clickable grey\"\n                            src={piano}\n                            alt={piano}>\n                        </img>\n                    </Tooltip>)\n                )\n            }\n        </div >\n    )\n}\n\nexport default Piano\n\n\n/*\n\n const patchBookmark = (value) => {\n        async function patchEntry(value) {\n            const response = await axios({\n                url: process.env.REACT_APP_API_URL + '/' + props.id,\n                method: 'PATCH',\n                data: { 'bookmark': value }\n            });\n            if ((response.status !== 200) & (response.status !== 201)) {\n                throw new Error(\"Error!\");\n            }\n            const patchResult = await response.data;\n            return patchResult;\n        }\n        // fetch Entries\n        patchEntry(value).then((resData) => {\n            const patchResult = resData;\n            console.log(\"Sucess\", patchResult);\n        }\n        ).catch(error => {\n            console.log(\"error\", error.message);\n        });\n    }\n\n\n    const handlerBookmarking = (value) => {\n        props.setIsBookmarked(value);\n        patchBookmark(value);\n\n        const messageTitle = value ? 'Bookmarked!' : 'Bookmarked deleted';\n        const messageText = value ? 'will appears with a bookmark from now on.' : 'is not bookmarked anymore';\n\n        notification.success({\n            message: messageTitle,\n            description:\n                `Watchlist entry #${props.id} ${messageText}.`,\n            placement: \"bottomRight\",\n        });\n\n    }\n\n*/","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/Favorite/Favorite.js",["62","63"],"import { React } from 'react';\nimport favorite from './favorite.png'\nimport { Tooltip, notification } from 'antd';\nimport axios from 'axios';\n\nimport './Favorite.css';\n\nconst Favorite = props => {\n\n    const isFavorite = props.favorite;\n    const front = props.front;\n\n    const handlerMarkAsPIano = (value) => {\n        console.log('click', value)\n    }\n\n    return (\n        <div className=\"favorite\" id=\"favorite\">\n            {front ?\n                (isFavorite &&\n                    (<img\n                        className=\"favorite__img\"\n                        src={favorite}\n                        alt={favorite}>\n                    </img>)\n                )\n                :\n                (isFavorite ?\n                    (<Tooltip placement=\"right\" title=\"Mehhhhh ...\">\n                        <img\n                            onClick={() => handlerMarkAsPIano(false)}\n                            className=\"piano__img clickable\"\n                            src={favorite}\n                            alt={favorite}>\n                        </img>\n                    </Tooltip>)\n                    :\n                    (<Tooltip placement=\"right\" title=\"I absolutely LOVE this!\">\n                        <img\n                            onClick={() => handlerMarkAsPIano(true)}\n                            className=\"favorite__img clickable grey\"\n                            src={favorite}\n                            alt={favorite}>\n                        </img>\n                    </Tooltip>)\n                )\n            }\n        </div >\n    )\n}\n\nexport default Favorite\n\n\n/*\n\n const patchBookmark = (value) => {\n        async function patchEntry(value) {\n            const response = await axios({\n                url: process.env.REACT_APP_API_URL + '/' + props.id,\n                method: 'PATCH',\n                data: { 'bookmark': value }\n            });\n            if ((response.status !== 200) & (response.status !== 201)) {\n                throw new Error(\"Error!\");\n            }\n            const patchResult = await response.data;\n            return patchResult;\n        }\n        // fetch Entries\n        patchEntry(value).then((resData) => {\n            const patchResult = resData;\n            console.log(\"Sucess\", patchResult);\n        }\n        ).catch(error => {\n            console.log(\"error\", error.message);\n        });\n    }\n\n\n    const handlerBookmarking = (value) => {\n        props.setIsBookmarked(value);\n        patchBookmark(value);\n\n        const messageTitle = value ? 'Bookmarked!' : 'Bookmarked deleted';\n        const messageText = value ? 'will appears with a bookmark from now on.' : 'is not bookmarked anymore';\n\n        notification.success({\n            message: messageTitle,\n            description:\n                `Watchlist entry #${props.id} ${messageText}.`,\n            placement: \"bottomRight\",\n        });\n\n    }\n\n*/","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/InfoDrawer/InfoDrawer.js",["64"],"import { React } from \"react\";\nimport YouTube from 'react-youtube';\nimport { Drawer, Divider } from 'antd';\nimport Tags from './Tags/Tags'\nimport Lyrics from './Lyrics/Lyrics';\nimport Links from './Links/Links';\n\nconst cElement = null;\n\nconst InfoDrawer = (props) => {\n\n    const videoID = props.page.videourl ? props.page.videourl.split('=')[1] : '';\n    const videoOptions = {\n        height: '226',\n        width: '300',\n        playerVars: {\n            autoplay: 0,\n        },\n    };\n\n    return (\n        <Drawer\n            title={props.page.song.toUpperCase()}\n            placement=\"right\"\n            closable={true}\n            onClose={props.handlerCloseDrawer}\n            visible={props.drawerVisible}\n            className=\"Page__drawer\"\n            width=\"350\"\n        >\n            {props.page.videourl ?\n                (<YouTube videoId={videoID} opts={videoOptions} />)\n                : (<img src={props.page.picurl} className=\"Page-drawer__artwork\" alt=\"pic_missing\" ></img>)\n            }\n\n            <Divider orientation=\"left\" plain>\n                <span className=\"Page-drawer__diviser\">\n                    Tags\n                </span>\n            </Divider>\n            <Tags\n                tags={props.page.tags}\n                id={props.page.id}\n                setTagsMissing={props.setTagsMissing}\n            />\n\n            <Divider />\n            <Links\n                tabs={props.page.link}\n                video={props.page.videourl}\n                pic={props.page.picurl}\n                id={props.page.id}\n                setTabsMissing={props.setTabsMissing}\n                setVideoMissing={props.setVideoMissing}\n                setPicMissing={props.setPicMissing}\n            />\n\n            <Divider orientation=\"left\" plain>\n                <span className=\"Page-drawer__diviser\">\n                    Lyrics\n                    </span>\n            </Divider>\n            <Lyrics artist={props.page.artist} song={props.page.song} />\n        </Drawer>\n    )\n\n}\n\nexport default InfoDrawer;","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/InfoDrawer/Tags/Tags.js",[],"/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/InfoDrawer/Lyrics/Lyrics.js",[],"/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/InfoDrawer/Links/Links.js",["65","66","67","68","69","70"],"import { React, useState } from 'react';\nimport { Tag, Input } from 'antd';\nimport axios from 'axios';\nimport { PlusOutlined, LinkOutlined } from '@ant-design/icons';\n\nimport './Links.css'\n\nconst Links = props => {\n\n    const [tabs, setTabs] = useState(props.tabs);\n    const [video, setVideo] = useState(props.video);\n    const [pic, setPic] = useState(props.pic);\n\n    console.log(props.tabs)\n\n    /*\n    const [editInputValue, setEditInputValue] = useState('');\n\n    const patchTagsInDB = (tags) => {\n        async function patchEntry(tags) {\n            const response = await axios({\n                url: process.env.REACT_APP_API_URL + '/' + props.id,\n                method: 'PATCH',\n                data: { 'tags': tags }\n            });\n            if ((response.status !== 200) & (response.status !== 201)) {\n                throw new Error(\"Error!\");\n            }\n            const patchResult = await response.data;\n            return patchResult;\n        }\n        patchEntry(tags).then((resData) => {\n        }\n        ).catch(error => {\n            console.log(\"error\", error.message);\n        });\n    }\n\n\n    const handlerDeleteTag = (deleteTagIndex) => {\n        let oldTags = tags;\n        oldTags.splice(deleteTagIndex, 1);\n        if (oldTags.length === 0) {\n            props.setTagsMissing(true);\n            patchTagsInDB(\"null\");\n        } else {\n            patchTagsInDB(oldTags);\n        }\n        setTags(oldTags);\n    }\n\n    const handleEditInputConfirm = e => {\n        tags[editInputIndex] = editInputValue.toLowerCase();\n        setTags(tags);\n        patchTagsInDB(tags);\n        setEditInputIndex(-1)\n        setEditInputValue('');\n        props.setTagsMissing(false);\n    };\n\n    const handleEditInputCancel = e => {\n        setEditInputIndex(-1)\n        setEditInputValue('');\n    };\n\n    const handleEditInputChange = e => {\n        setEditInputValue(e.target.value);\n    };\n\n    const handleInputConfirm = e => {\n        const inputValue = e.target.value.toLowerCase();\n        if (tags === undefined || tags === null) {\n            const newtags = [inputValue];\n            patchTagsInDB(newtags);\n            setTags(newtags);\n        }\n        else if (inputValue && tags.indexOf(inputValue) === -1) {\n            const newtags = [...tags, inputValue];\n            patchTagsInDB(newtags);\n            setTags(newtags);\n        }\n        setEditInputIndex(-1)\n        setEditInputValue('');\n    };\n\n    const handleInputCancel = () => {\n        setEditInputIndex(-1)\n        setEditInputValue('');\n    };\n\n    */\n\n\n\n    /*\n    const formattedTabs = () => {\n    const isLongTag = tag.length > 20;\n\n    if (editInputIndex === index) {\n        return (\n            <Input\n                key={index}\n                size=\"small\"\n                className=\"tag-input\"\n                value={editInputValue}\n                onChange={handleEditInputChange}\n                onBlur={handleEditInputCancel}\n                onPressEnter={handleEditInputConfirm}\n            />\n        );\n    }*/\n\n\n    return (\n        <div className='links'>\n            <div>\n                &nbsp;&nbsp;Tabs:\n                <Tag className=\"links__tag\" key=\"tabs\" >\n                    <span\n                        onDoubleClick={e => {\n                            //setEditInputIndex(index);\n                            //setEditInputValue(tag);\n                            e.preventDefault();\n                        }}\n                    >\n                        <LinkOutlined />&nbsp;\n                    {tabs.length > 35 ? `${tabs.slice(0, 30)}...` : tabs}\n                    </span>\n                </Tag>\n            </div>\n            <div>\n                Video:\n                 <Tag className=\"links__tag\" key=\"video\" >\n                    <span\n                        onDoubleClick={e => {\n                            //setEditInputIndex(index);\n                            //setEditInputValue(tag);\n                            e.preventDefault();\n                        }}\n                    >\n                        <LinkOutlined />&nbsp;\n                    {video.length > 35 ? `${video.slice(0, 30)}...` : video}\n                    </span>\n                </Tag>\n            </div>\n            <div>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Pic:\n                 <Tag className=\"links__tag\" key=\"pic\" >\n                    <span\n                        onDoubleClick={e => {\n                            //setEditInputIndex(index);\n                            //setEditInputValue(tag);\n                            e.preventDefault();\n                        }}\n                    >\n                        <LinkOutlined />&nbsp;\n                    {pic.length > 35 ? `${pic.slice(0, 30)}...` : pic}\n                    </span>\n                </Tag>\n            </div>\n        </div>\n    )\n}\n\nexport default Links\n\n","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/Bass/Bass.js",["71","72"],"import { React } from 'react';\nimport bass from './bass.png'\nimport { Tooltip, notification } from 'antd';\nimport axios from 'axios';\n\nimport './Bass.css';\n\nconst Bass = props => {\n\n    const isBass = props.isBass;\n    const front = props.front;\n\n    const handlerMarkBass = (value) => {\n        console.log('click', value)\n    }\n\n    return (\n        <div className=\"bass\" id=\"piano\">\n            {front ?\n                (isBass &&\n                    (<Tooltip placement=\"bottomRight\" title=\"Play this on bass!\">\n                        <img\n                            className=\"bass__img\"\n                            src={bass}\n                            alt={bass}>\n                        </img>\n                    </Tooltip>)\n                )\n                :\n                (isBass ?\n                    (<Tooltip placement=\"right\" title=\"Not for bass?\">\n                        <img\n                            onClick={() => handlerMarkBass(false)}\n                            className=\"bass__img clickable\"\n                            src={bass}\n                            alt={bass}>\n                        </img>\n                    </Tooltip>)\n                    :\n                    (<Tooltip placement=\"right\" title=\"This is for bass!\">\n                        <img\n                            onClick={() => handlerMarkBass(true)}\n                            className=\"bass__img clickable grey\"\n                            src={bass}\n                            alt={bass}>\n                        </img>\n                    </Tooltip>)\n                )\n            }\n        </div >\n    )\n}\n\nexport default Bass\n\n\n/*\n\n const patchBookmark = (value) => {\n        async function patchEntry(value) {\n            const response = await axios({\n                url: process.env.REACT_APP_API_URL + '/' + props.id,\n                method: 'PATCH',\n                data: { 'bookmark': value }\n            });\n            if ((response.status !== 200) & (response.status !== 201)) {\n                throw new Error(\"Error!\");\n            }\n            const patchResult = await response.data;\n            return patchResult;\n        }\n        // fetch Entries\n        patchEntry(value).then((resData) => {\n            const patchResult = resData;\n            console.log(\"Sucess\", patchResult);\n        }\n        ).catch(error => {\n            console.log(\"error\", error.message);\n        });\n    }\n\n\n    const handlerBookmarking = (value) => {\n        props.setIsBookmarked(value);\n        patchBookmark(value);\n\n        const messageTitle = value ? 'Bookmarked!' : 'Bookmarked deleted';\n        const messageText = value ? 'will appears with a bookmark from now on.' : 'is not bookmarked anymore';\n\n        notification.success({\n            message: messageTitle,\n            description:\n                `Watchlist entry #${props.id} ${messageText}.`,\n            placement: \"bottomRight\",\n        });\n\n    }\n\n*/",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":18,"column":21,"nodeType":"79","messageId":"80","endLine":18,"endColumn":31},{"ruleId":"77","severity":1,"message":"81","line":3,"column":19,"nodeType":"79","messageId":"80","endLine":3,"endColumn":31},{"ruleId":"77","severity":1,"message":"82","line":4,"column":8,"nodeType":"79","messageId":"80","endLine":4,"endColumn":13},{"ruleId":"77","severity":1,"message":"81","line":3,"column":19,"nodeType":"79","messageId":"80","endLine":3,"endColumn":31},{"ruleId":"77","severity":1,"message":"82","line":4,"column":8,"nodeType":"79","messageId":"80","endLine":4,"endColumn":13},{"ruleId":"77","severity":1,"message":"83","line":8,"column":7,"nodeType":"79","messageId":"80","endLine":8,"endColumn":15},{"ruleId":"77","severity":1,"message":"84","line":2,"column":15,"nodeType":"79","messageId":"80","endLine":2,"endColumn":20},{"ruleId":"77","severity":1,"message":"82","line":3,"column":8,"nodeType":"79","messageId":"80","endLine":3,"endColumn":13},{"ruleId":"77","severity":1,"message":"85","line":4,"column":10,"nodeType":"79","messageId":"80","endLine":4,"endColumn":22},{"ruleId":"77","severity":1,"message":"86","line":10,"column":18,"nodeType":"79","messageId":"80","endLine":10,"endColumn":25},{"ruleId":"77","severity":1,"message":"87","line":11,"column":19,"nodeType":"79","messageId":"80","endLine":11,"endColumn":27},{"ruleId":"77","severity":1,"message":"88","line":12,"column":17,"nodeType":"79","messageId":"80","endLine":12,"endColumn":23},{"ruleId":"77","severity":1,"message":"81","line":3,"column":19,"nodeType":"79","messageId":"80","endLine":3,"endColumn":31},{"ruleId":"77","severity":1,"message":"82","line":4,"column":8,"nodeType":"79","messageId":"80","endLine":4,"endColumn":13},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'setMissing' is assigned a value but never used.","Identifier","unusedVar","'notification' is defined but never used.","'axios' is defined but never used.","'cElement' is assigned a value but never used.","'Input' is defined but never used.","'PlusOutlined' is defined but never used.","'setTabs' is assigned a value but never used.","'setVideo' is assigned a value but never used.","'setPic' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]