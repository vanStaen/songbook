[{"/Users/clementvanstaen/Projects/songbook/frontend/src/index.js":"1","/Users/clementvanstaen/Projects/songbook/frontend/src/App.js":"2","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Book/Book.js":"3","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/Page.js":"4","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/Lyrics/Lyrics.js":"5"},{"size":247,"mtime":1607277226000,"results":"6","hashOfConfig":"7"},{"size":226,"mtime":1607203054000,"results":"8","hashOfConfig":"7"},{"size":1818,"mtime":1607282774000,"results":"9","hashOfConfig":"7"},{"size":2516,"mtime":1607285160000,"results":"10","hashOfConfig":"7"},{"size":1319,"mtime":1607286084000,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"9yvzlv",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/clementvanstaen/Projects/songbook/frontend/src/index.js",[],["24","25"],"/Users/clementvanstaen/Projects/songbook/frontend/src/App.js",[],"/Users/clementvanstaen/Projects/songbook/frontend/src/component/Book/Book.js",[],"/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/Page.js",["26","27","28","29","30"],"import { React, useState } from \"react\";\nimport { Tooltip, Drawer, Divider } from 'antd';\nimport { MenuUnfoldOutlined, } from '@ant-design/icons';\nimport Lyrics from './Lyrics/Lyrics';\n\nimport '../.././fonts/Dymo.ttf';\nimport './Page.css'\n\nconst Page = (props) => {\n    const [visible, setVisible] = useState(false);\n\n    const showDrawer = () => {\n        setVisible(true);\n    };\n    const onClose = () => {\n        setVisible(false);\n    };\n\n    const title = props.page.title.replace('-', '/').replace(/ /g, '');\n    const howLongIsLong = 24;\n    const isLongTitle = title.length > howLongIsLong;\n    const titlePage = isLongTitle ? `${title.slice(0, howLongIsLong)}...` : title;\n    const artist = props.page.artist;\n    const song = props.page.song.toUpperCase();\n\n    let video = '';\n    if (props.page.videourl) {\n        video = props.page.videourl.includes(\"youtube\") ? `https://www.youtube.com/embed/${props.page.videourl.split('=')[1]}` : props.page.videourl;\n    }\n\n\n\n    return (\n        <div className=\"Page__main\">\n            <a href={props.page.link} target=\"_blank\">\n                <img src={props.page.picurl} className=\"Page__artwork\"></img>\n            </a>\n            <div className=\"Page__title\">{titlePage}</div>\n            <Tooltip title=\"Show text\">\n                <div className=\"Page__actionicon\">\n                    <MenuUnfoldOutlined onClick={showDrawer} />\n                </div>\n            </Tooltip>\n            <Drawer\n                title={song}\n                placement=\"right\"\n                closable={true}\n                onClose={onClose}\n                visible={visible}\n                className=\"Page__drawer\"\n                width=\"350\"\n            >\n                {props.page.videourl ?\n                    (<iframe width=\"300px\" height=\"226px\" src={video}></iframe>)\n                    : (<img src={props.page.picurl} className=\"Page-drawer__artwork\"></img>)\n                }\n\n                <Divider orientation=\"left\" plain>\n                    <span className=\"Page-drawer__diviser\">\n                        Tags\n                    </span>\n                </Divider>\n                <p>{props.page.tags}</p>\n                <Divider orientation=\"left\" plain>\n                    <span className=\"Page-drawer__diviser\">\n                        Lyrics\n                    </span>\n                </Divider>\n                <Lyrics artist={props.page.artist} song={props.page.song} />\n            </Drawer>\n        </div>\n    );\n}\n\nexport default Page;","/Users/clementvanstaen/Projects/songbook/frontend/src/component/Page/Lyrics/Lyrics.js",["31","32","33","34","35"],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":23,"column":11,"nodeType":"42","messageId":"43","endLine":23,"endColumn":17},{"ruleId":"44","severity":1,"message":"45","line":35,"column":39,"nodeType":"46","endLine":35,"endColumn":54},{"ruleId":"47","severity":1,"message":"48","line":36,"column":17,"nodeType":"49","endLine":36,"endColumn":72},{"ruleId":"50","severity":1,"message":"51","line":54,"column":22,"nodeType":"49","endLine":54,"endColumn":71},{"ruleId":"47","severity":1,"message":"48","line":55,"column":24,"nodeType":"49","endLine":55,"endColumn":86},{"ruleId":"40","severity":1,"message":"52","line":3,"column":10,"nodeType":"42","messageId":"43","endLine":3,"endColumn":17},{"ruleId":"40","severity":1,"message":"53","line":3,"column":19,"nodeType":"42","messageId":"43","endLine":3,"endColumn":25},{"ruleId":"40","severity":1,"message":"54","line":3,"column":27,"nodeType":"42","messageId":"43","endLine":3,"endColumn":34},{"ruleId":"40","severity":1,"message":"55","line":3,"column":36,"nodeType":"42","messageId":"43","endLine":3,"endColumn":42},{"ruleId":"40","severity":1,"message":"56","line":4,"column":10,"nodeType":"42","messageId":"43","endLine":4,"endColumn":28},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'artist' is assigned a value but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'Tooltip' is defined but never used.","'Drawer' is defined but never used.","'Divider' is defined but never used.","'Result' is defined but never used.","'MenuUnfoldOutlined' is defined but never used.","no-global-assign","no-unsafe-negation"]