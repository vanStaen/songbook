{"version":3,"sources":["component/Page/Lyrics/Lyrics.js","component/Page/Page.js","fonts/Dymo.ttf","component/Book/Book.js","App.js","index.js"],"names":["Lyrics","props","useState","lyrics","setLyrics","lyricsApiUrl","process","artist","replace","song","a","axios","url","method","response","status","Error","data","result","resultLyrics","track","text","fetchLyrics","then","resData","catch","error","console","log","message","loadLyrics","style","whiteSpace","Page","visible","setVisible","title","page","titlePage","length","slice","toUpperCase","video","videourl","includes","split","className","href","link","target","src","picurl","MenuUnfoldOutlined","onClick","placement","closable","onClose","width","height","orientation","plain","tags","Book","state","songbookPages","isLoading","this","loadPages","entries","fetchPages","pages","setState","book","map","id","margin","alt","fontSize","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ba73699.chunk.js","sourcesContent":["import { React, useState } from \"react\";\nimport axios from 'axios';\nimport { Tooltip, Drawer, Divider, Result } from 'antd';\nimport { MenuUnfoldOutlined, } from '@ant-design/icons';\n\nconst Lyrics = (props) => {\n    const [lyrics, setLyrics] = useState('Loading');\n    const lyricsApiUrl = process.env.REACT_APP_LYRICS_API_URL + props.artist.replace(/ /g, \"%20\") + '/' + props.song.replace(/ /g, \"%20\") + '?apikey=' + process.env.REACT_APP_LYRICS_API_KEY;\n\n    const loadLyrics = () => {\n        async function fetchLyrics() {\n            const response = await axios({\n                url: lyricsApiUrl,\n                method: \"GET\",\n            });\n            if ((response.status !== 200) & (response.status !== 201)) {\n                throw new Error(\"Error!\");\n            }\n            const result = await response.data;\n            const resultLyrics = result.result.track.text;\n            return resultLyrics;\n        }\n        // fetch Entries\n        fetchLyrics().then((resData) => {\n            setLyrics(resData);\n        }\n        ).catch(error => {\n            setLyrics('No lyrics found.');\n            console.log(error.message);\n        });\n    };\n\n    loadLyrics();\n\n    return (\n        <div style={{ whiteSpace: \"pre-line\" }}>\n            {lyrics}\n        </div>\n    );\n}\n\nexport default Lyrics;","import { React, useState } from \"react\";\nimport { Tooltip, Drawer, Divider } from 'antd';\nimport { MenuUnfoldOutlined, } from '@ant-design/icons';\nimport Lyrics from './Lyrics/Lyrics';\n\nimport '../.././fonts/Dymo.ttf';\nimport './Page.css'\n\nconst Page = (props) => {\n    const [visible, setVisible] = useState(false);\n\n    const showDrawer = () => {\n        setVisible(true);\n    };\n    const onClose = () => {\n        setVisible(false);\n    };\n\n    const title = props.page.title.replace('-', '/').replace(/ /g, '');\n    const howLongIsLong = 24;\n    const isLongTitle = title.length > howLongIsLong;\n    const titlePage = isLongTitle ? `${title.slice(0, howLongIsLong)}...` : title;\n    const artist = props.page.artist;\n    const song = props.page.song.toUpperCase();\n\n    let video = '';\n    if (props.page.videourl) {\n        video = props.page.videourl.includes(\"youtube\") ? `https://www.youtube.com/embed/${props.page.videourl.split('=')[1]}` : props.page.videourl;\n    }\n\n\n\n    return (\n        <div className=\"Page__main\">\n            <a href={props.page.link} target=\"_blank\">\n                <img src={props.page.picurl} className=\"Page__artwork\"></img>\n            </a>\n            <div className=\"Page__title\">{titlePage}</div>\n            <Tooltip title=\"Show text\">\n                <div className=\"Page__actionicon\">\n                    <MenuUnfoldOutlined onClick={showDrawer} />\n                </div>\n            </Tooltip>\n            <Drawer\n                title={song}\n                placement=\"right\"\n                closable={true}\n                onClose={onClose}\n                visible={visible}\n                className=\"Page__drawer\"\n                width=\"350\"\n            >\n                {props.page.videourl ?\n                    (<iframe width=\"300px\" height=\"226px\" src={video}></iframe>)\n                    : (<img src={props.page.picurl} className=\"Page-drawer__artwork\"></img>)\n                }\n\n                <Divider orientation=\"left\" plain>\n                    <span className=\"Page-drawer__diviser\">\n                        Tags\n                    </span>\n                </Divider>\n                <p>{props.page.tags}</p>\n                <Divider orientation=\"left\" plain>\n                    <span className=\"Page-drawer__diviser\">\n                        Lyrics\n                    </span>\n                </Divider>\n                <Lyrics artist={props.page.artist} song={props.page.song} />\n            </Drawer>\n        </div>\n    );\n}\n\nexport default Page;","export default __webpack_public_path__ + \"static/media/Dymo.67f93d5b.ttf\";","import React, { Component } from \"react\";\nimport Page from '../Page/Page'\nimport axios from 'axios';\n\nimport './Book.css';\n\nclass Book extends Component {\n\n    state = {\n        songbookPages: [],\n        isLoading: true,\n    }\n\n    componentDidMount() {\n        this.loadPages();\n    }\n\n    loadPages() {\n        async function fetchPages() {\n            const response = await axios({\n                url: process.env.REACT_APP_API_URL,\n                method: \"GET\",\n            });\n            if ((response.status !== 200) & (response.status !== 201)) {\n                throw new Error(\"Error!\");\n            }\n            const entries = await response.data;\n            return entries;\n        }\n        // fetch Entries\n        fetchPages().then((resData) => {\n            const pages = resData;\n            this.setState({ songbookPages: pages });\n            this.setState({ isLoading: false });\n        }\n        ).catch(error => {\n            console.log(error.message);\n        });\n    };\n\n\n    render() {\n        const book = this.state.songbookPages.map(page => {\n            return (\n                <div key={page.id}>\n                    <Page page={page} />\n                </div>\n            );\n        })\n        return (\n            <div style={{ margin: 30 }}>\n                { this.state.isLoading ?\n                    <div>\n                        <img src=\"https://avatars0.githubusercontent.com/u/12551446\" className=\"book-loader\" alt=\"Loading\" />\n                        <br />\n                        <div style={{ fontSize: 18 }}>Loading ... </div>\n                    </div>\n                    :\n                    (<div className=\"Book__main\">\n                        {book}\n                    </div>)\n                }\n\n            </div>\n        );\n    }\n}\n\nexport default Book;\n","import './App.css';\nimport Book from './component/Book/Book'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Book />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './fonts/Dymo.ttf';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}