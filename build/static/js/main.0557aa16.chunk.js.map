{"version":3,"sources":["component/Book/Book.js","App.js","index.js"],"names":["Entries","state","songbookPages","isLoading","this","loadPages","a","axios","url","process","method","response","status","Error","data","entries","fetchPages","then","resData","pages","setState","catch","error","console","log","message","book","map","page","href","link","target","src","picurl","alt","width","title","style","margin","className","fontSize","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAsEeA,G,kNA9DXC,MAAQ,CACJC,cAAe,GACfC,WAAW,G,kEAIXC,KAAKC,c,kCAGI,IAAD,mDACR,8BAAAC,EAAA,sEAC2BC,IAAM,CACzBC,IAAKC,8CACLC,OAAQ,QAHhB,YAK6B,OAJnBC,EADV,QAKkBC,OAAuC,MAApBD,EAASC,QAL9C,sBAMc,IAAIC,MAAM,UANxB,uBAQ0BF,EAASG,KARnC,cAQUC,EARV,yBASWA,GATX,4CADQ,kEAaRC,GAAaC,MAAK,SAACC,GACf,IAAMC,EAAQD,EACd,EAAKE,SAAS,CAAElB,cAAeiB,IAC/B,EAAKC,SAAS,CAAEjB,WAAW,OAE7BkB,OAAM,SAAAC,GACJC,QAAQC,IAAIF,EAAMG,c,+BAMtB,IAAMC,EAAOtB,KAAKH,MAAMC,cAAcyB,KAAI,SAAAC,GACtC,OACI,gCACI,mBAAGC,KAAMD,EAAKE,KAAMC,OAAO,SAA3B,SACI,qBAAKC,IAAKJ,EAAKK,OAAQC,IAAI,OAAOC,MAAM,YAE5C,4BAAIP,EAAKQ,cAGrB,OACI,qBAAKC,MAAO,CAAEC,OAAQ,IAAtB,SACMlC,KAAKH,MAAME,UACT,gCACI,qBAAK6B,IAAI,oDAAoDO,UAAU,cAAcL,IAAI,YACzF,uBACA,qBAAKG,MAAO,CAAEG,SAAU,IAAxB,6BAGH,8BACId,U,GAvDHe,cCOPC,MAVf,WACE,OACE,qBAAKH,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,SCFRI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0557aa16.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Page from '../Page/Page'\nimport axios from 'axios';\n\nimport './Book.css';\n\nclass Entries extends Component {\n\n    state = {\n        songbookPages: [],\n        isLoading: true,\n    }\n\n    componentDidMount() {\n        this.loadPages();\n    }\n\n    loadPages() {\n        async function fetchPages() {\n            const response = await axios({\n                url: process.env.REACT_APP_API_URL,\n                method: \"GET\",\n            });\n            if ((response.status !== 200) & (response.status !== 201)) {\n                throw new Error(\"Error!\");\n            }\n            const entries = await response.data;\n            return entries;\n        }\n        // fetch Entries\n        fetchPages().then((resData) => {\n            const pages = resData;\n            this.setState({ songbookPages: pages });\n            this.setState({ isLoading: false });\n        }\n        ).catch(error => {\n            console.log(error.message);\n        });\n    };\n\n\n    render() {\n        const book = this.state.songbookPages.map(page => {\n            return (\n                <div>\n                    <a href={page.link} target=\"_blank\">\n                        <img src={page.picurl} alt=\"upsi\" width=\"300px\"></img>\n                    </a>\n                    <p>{page.title}</p>\n                </div>);\n        })\n        return (\n            <div style={{ margin: 30 }}>\n                { this.state.isLoading ?\n                    <div>\n                        <img src=\"https://avatars0.githubusercontent.com/u/12551446\" className=\"book-loader\" alt=\"Loading\" />\n                        <br />\n                        <div style={{ fontSize: 18 }}>Loading ... </div>\n                    </div>\n                    :\n                    (<div>\n                        {book}\n                    </div>)\n                }\n\n            </div>\n        );\n    }\n}\n\nexport default Entries;\n","import './App.css';\nimport Book from './component/Book/Book'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Book />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}